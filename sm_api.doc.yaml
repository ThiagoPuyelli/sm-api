openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: http://localhost:3500/
info:
  description: This is a api for system medic app
  version: "1.0.0"
  title: SM_API
  contact:
    email: thiagopuyelli@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /auth/sign-in:
    post: 
      tags:
        - users
      summary: Login user
      description: This is a route for receive token and authenticate user
      parameters:
        - in: Basic Auth
          name: Email
          description: In the username is required the email
          required: true
          schema:
            type: string
        - in: Basic Auth
          name: Password
          description: Password of the user
          required: true
          schema: 
            type: string
      responses:
        '500':
          description: Unauthorized
        '200':
          description: User authorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: 
                    type: number
                  message:
                    type: object
                    properties:
                      token:
                        type: string
  /patient/find/:{amount}/:pageOptional:
    get:
      tags:
        - patients
      summary: Get Patients
      description: In the parameters, indicate in the amount, how many patients do you need and in the page (optional), indicate de page of list, but if not indicated, the first page will be returned
      responses:
        '401':
          description: Unauthorized
        '404':
          description: If the user don't have a patients
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
        '200':
          description: You get patients
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: object
                    properties:
                      patients:
                        type: array
                        items:
                          $ref: '#/components/schemas/Patient'
                      numberPages:
                        type: number
  /patient:
    post:
      tags:
        - patients
      summary: Save Patient
      description: This is a route to user add a patient
      parameters:
        - in: body
          name: Data Patient
          description: The _id is not send and is required the name, lastname and DNI, the other information is optional.
          required: true
          schema:
            $ref: '#/components/schemas/Patient'
      responses:
        '500':
          description: When data is invalid or have error to save patient
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
        '401':
          description: Unauthorized
        '200':
          description: When patient is saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  message:
                    type: string
  /inventory:
    get:
      tags:
        - developers
      summary: searches inventory
      operationId: searchInventory
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      parameters:
        - in: query
          name: searchString
          description: pass an optional search string for looking up inventory
          required: false
          schema:
            type: string
        - in: query
          name: skip
          description: number of records to skip for pagination
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          description: maximum number of records to return
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 50
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
        '400':
          description: bad input parameter
    post:
      tags:
        - admins
      summary: adds an inventory item
      operationId: addInventory
      description: Adds an item to the system
      responses:
        '201':
          description: item created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing item already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
        description: Inventory item to add
components:
  schemas:
    User:
      type: object
      required:
        - _id
        - email
        - password
      properties:
        _id:
          type: string
          format: mongo
        email:
          type: string
          format: email
        password:
          type: string
    Patient:
      type: object
      required:
        - _id
        - name
        - lastname
        - DNI
        - userID
      properties:
        _id:
          type: string
          format: mongo
        name:
          type: string
        lastname:
          type: string
        DNI:
          type: string
          format: DNI
        email:
          type: string
          format: email
        birth:
          type: string
          format: date
        gender:
          type: string
        phone:
          type: string
        mobile:
          type: string
        address:
          type: string
        postalCode:
          type: string
        street:
          type: string
        province: 
          type: string
    InventoryItem:
      type: object
      required:
        - id
        - name
        - manufacturer
        - releaseDate
      properties:
        id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        name:
          type: string
          example: Widget Adapter
        releaseDate:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
    Manufacturer:
      required:
        - name
      properties:
        name:
          type: string
          example: ACME Corporation
        homePage:
          type: string
          format: url
          example: 'https://www.acme-corp.com'
        phone:
          type: string
          example: 408-867-5309
      type: object